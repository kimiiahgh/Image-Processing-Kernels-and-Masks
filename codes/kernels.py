import numpy as np
import cv2
from matplotlib import pyplot as plt
img = cv2.imread('Image.jpg')
cv2.namedWindow('image(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('image(press 0 to change)',img)
cv2.waitKey(0)
cv2.destroyAllWindows()
#sharpen
sharpen_kernel=np.array([[0,-1,0], [-1,5,-1], [0,-1,0]])
sharpen=cv2.filter2D(img,-1,sharpen_kernel)
cv2.namedWindow('sharpen(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('sharpen(press 0 to change)',sharpen)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(121),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(122),plt.imshow(sharpen),plt.title('sharpen')
plt.xticks([]), plt.yticks([])
plt.show()

#Laplacian
Laplacian_kernel= np.array([[0,1,0],[1,-4,1],[0,1,0]])
Laplacian=cv2.filter2D(img, -1, Laplacian_kernel)
cv2.namedWindow('Laplacian(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Laplacian(press 0 to change)',Laplacian)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(131),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(132),plt.imshow(Laplacian),plt.title('Laplacian')
plt.xticks([]), plt.yticks([])
plt.show()

#Emboss
Emboss_kernel=np.array([[-2,-1,0],[-1,1,1],[0,1,2]])
Emboss=cv2.filter2D(img, -1, Emboss_kernel)
cv2.namedWindow('Emboss(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Emboss(press 0 to change)',Emboss)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(141),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(142),plt.imshow(Emboss),plt.title('Emboss')
plt.xticks([]), plt.yticks([])
plt.show()

#Outline
Outline_kernel=np.array([[-1,-1,-1],[-1,8,-1],[-1,-1,-1]])
Outline= cv2.filter2D(img, -1, Outline_kernel)
cv2.namedWindow('Outline(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Outline(press 0 to change)',Outline)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(151),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(152),plt.imshow(Outline),plt.title('Outline')
plt.xticks([]), plt.yticks([])
plt.show()

#Bottom Sobel
Bottom_Sobel= np.array([[-1,-2,-1],[0,0,0],[1,2,1]])
bottom_sob = cv2.filter2D(img, -1, Bottom_Sobel)
cv2.namedWindow('Bottom Sobel(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Bottom Sobel(press 0 to change)',bottom_sob)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(161),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(162),plt.imshow(bottom_sob),plt.title('Bottom Sobel')
plt.xticks([]), plt.yticks([])
plt.show()


# Right Sobel
Right_Sobel=np.array([[-1,0,1],[-2,0,2],[-1,0,1]])
right_sob = cv2.filter2D(img, -1, Right_Sobel)
cv2.namedWindow('Right Sobel(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Right Sobel(press 0 to change)',right_sob)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(171),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(172),plt.imshow(right_sob),plt.title('Right Sobel')
plt.xticks([]), plt.yticks([])
plt.show()

#Top Sobel
Top_Sobel= np.array([[1,2,1],[0,0,0],[-1,-2,-1]])
top_sob = cv2.filter2D(img, -1, Top_Sobel)
cv2.namedWindow('Top Sobel(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Top Sobel(press 0 to change)',top_sob)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(181),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(182),plt.imshow(top_sob),plt.title('Top Sobel')
plt.xticks([]), plt.yticks([])
plt.show()

#Difference
Difference= np.array([[-1,-1,-1],[-1,8,-1],[-1,-1,-1]])
diff = cv2.filter2D(img, -1, Difference)
cv2.namedWindow('Difference(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Difference(press 0 to change)',diff)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(191),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(192),plt.imshow(diff),plt.title('Difference')
plt.xticks([]), plt.yticks([])
plt.show()

#Wieghted Avarage
W_Avg=np.array([[1,1,1],[1,8,1],[1,1,1]])
Weighted_avg=cv2.filter2D(img,-1,W_Avg)
cv2.namedWindow('Wieghted Avarage(press 0 to change)', cv2.WINDOW_NORMAL)
cv2.imshow('Wieghted Avarage(press 0 to change)',Weighted_avg)
cv2.waitKey(0)
cv2.destroyAllWindows()
plt.subplot(211),plt.imshow(img),plt.title('Original')
plt.xticks([]), plt.yticks([])
plt.subplot(212),plt.imshow(Weighted_avg),plt.title('Wieghted Avarage')
plt.xticks([]), plt.yticks([])
plt.show()
